name: blockchyp-java
on:
  push:
    branches:
      - "develop"
      - "master"
    tags:
      - "*"
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
  GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.5-openjdk-18-slim
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#gitactivity'
        if: always()
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: mvn dependency:go-offline
      - name: Run Build
        run: mvn -Dmaven.test.skip=true package
      - name: Run Test
        run: mvn test -P unit-test
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: '#gitactivity'
        if: always()
  publish:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.6-openjdk-18-slim
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') && startsWith(github.ref_name, 'v') }}
    needs: [ test ]
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#gitactivity'
        if: always()
      - name: Update APT
        run: apt update -y
      - name: Install GPG
        run: apt install gpg -y
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: mvn dependency:go-offline
      - name: Run Build
        run: mvn -Dmaven.test.skip=true package
      - run: openssl aes-256-cbc -d -in ./.circleci/ossrh-gpg-key -out ./.circleci/ossrh-gpg-key.asc -k "$ENCRYPTION_KEY"
      - run: gpg --batch --import ./.circleci/ossrh-gpg-key.asc
      - name: Maven Publish
        run: mvn deploy -s settings.xml -DskipTests=true -B -U -Prelease
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: '#gitactivity'
        if: always()